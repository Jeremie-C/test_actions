name: Check Code

on:
  push:
    branches:
      - develop
  pull_request:
    branches: 
      - main
      - develop

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull koalaman/shellcheck:stable Image
        run: docker pull koalaman/shellcheck:stable
      - name: Run Shellcheck against shell scripts
        run: docker run --rm -i -v "$PWD:/mnt" koalaman/shellcheck:stable $(find . -type f -exec grep -m1 -l -E '^#!.*sh.*' {} \; | grep -v '/.git/')

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3008 --ignore DL3059 $(find . -type f -iname "Dockerfile*")

  buildx:
    name: Test image build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-platform:
          - linux/amd64
          #- linux/arm64
          #- linux/arm/v6
          - linux/arm/v7
          #- linux/i386
    steps:
      # Checkout Code
      - name: Checkout
        uses: actions/checkout@v2
      # Set Up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # Set up buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Build Image 
      - name: Test Build ${{ matrix.docker-platform }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.docker-platform }}
          no-cache: true
          push: false      
      # Test image
      - name: Inspect
        run: |
          docker image inspect myimage:latest
          docker run -d --name test myimage:latest
          sleep 20
          docker logs test
          docker rm --force test
  